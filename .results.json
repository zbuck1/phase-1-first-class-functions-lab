{
  "stats": {
    "suites": 8,
    "tests": 13,
    "passes": 7,
    "pending": 0,
    "failures": 6,
    "start": "2022-01-17T20:19:58.930Z",
    "end": "2022-01-17T20:19:59.613Z",
    "duration": 683
  },
  "tests": [
    {
      "title": "should return a new array containing the first two drivers from the passed-in array",
      "fullTitle": "index.js returnFirstTwoDrivers() should return a new array containing the first two drivers from the passed-in array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: returnFirstTwoDrivers is not defined\n    at Context.<anonymous> (test/indexTest.js:10:7)\n    at processImmediate (node:internal/timers:464:21)",
        "message": "returnFirstTwoDrivers is not defined"
      }
    },
    {
      "title": "should return an array of the last two drivers",
      "fullTitle": "index.js returnLastTwoDrivers() should return an array of the last two drivers",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected [ 'Amari', 'Claudia' ] to deeply equal [ 'Amari', 'Mo' ]",
        "showDiff": true,
        "actual": "[\n  \"Amari\"\n  \"Claudia\"\n]",
        "expected": "[\n  \"Amari\"\n  \"Mo\"\n]",
        "stack": "AssertionError: expected [ 'Amari', 'Claudia' ] to deeply equal [ 'Amari', 'Mo' ]\n    at Context.<anonymous> (test/indexTest.js:16:75)\n    at processImmediate (node:internal/timers:464:21)"
      }
    },
    {
      "title": "has the `returnFirstTwoDrivers` function to as its first element",
      "fullTitle": "index.js selectingDrivers has the `returnFirstTwoDrivers` function to as its first element",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: returnFirstTwoDrivers is not defined\n    at Context.<anonymous> (test/indexTest.js:22:42)\n    at processImmediate (node:internal/timers:464:21)",
        "message": "returnFirstTwoDrivers is not defined"
      }
    },
    {
      "title": "has the `returnLastTwoDrivers` function to as its last element",
      "fullTitle": "index.js selectingDrivers has the `returnLastTwoDrivers` function to as its last element",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "allows us to invoke either function from the array",
      "fullTitle": "index.js selectingDrivers allows us to invoke either function from the array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ 'Amari', 'Claudia' ] to deeply equal [ 'Amari', 'Mo' ]",
        "showDiff": true,
        "actual": "[\n  \"Amari\"\n  \"Claudia\"\n]",
        "expected": "[\n  \"Amari\"\n  \"Mo\"\n]",
        "stack": "AssertionError: expected [ 'Amari', 'Claudia' ] to deeply equal [ 'Amari', 'Mo' ]\n    at Context.<anonymous> (test/indexTest.js:32:47)\n    at processImmediate (node:internal/timers:464:21)"
      }
    },
    {
      "title": "returns a function",
      "fullTitle": "index.js createFareMultiplier() returns a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should multiply a given value using the created multiplier",
      "fullTitle": "index.js createFareMultiplier() should multiply a given value using the created multiplier",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a function",
      "fullTitle": "index.js fareDoubler() is a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "doubles fares",
      "fullTitle": "index.js fareDoubler() doubles fares",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a function",
      "fullTitle": "index.js fareTripler() is a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "triples fares",
      "fullTitle": "index.js fareTripler() triples fares",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the first two drivers when passed returnFirstTwoDrivers() as the second argument",
      "fullTitle": "index.js selectDifferentDrivers(arrayOfDrivers, function) returns the first two drivers when passed returnFirstTwoDrivers() as the second argument",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: returnFirstTwoDrivers is not defined\n    at Context.<anonymous> (test/indexTest.js:72:46)\n    at processImmediate (node:internal/timers:464:21)",
        "message": "returnFirstTwoDrivers is not defined"
      }
    },
    {
      "title": "returns the last two drivers when passed returnLastTwoDrivers() as the second argument",
      "fullTitle": "index.js selectDifferentDrivers(arrayOfDrivers, function) returns the last two drivers when passed returnLastTwoDrivers() as the second argument",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ 'Antonia', 'Nuru' ] to deeply equal [ 'Amari', 'Mo' ]",
        "showDiff": true,
        "actual": "[\n  \"Antonia\"\n  \"Nuru\"\n]",
        "expected": "[\n  \"Amari\"\n  \"Mo\"\n]",
        "stack": "AssertionError: expected [ 'Antonia', 'Nuru' ] to deeply equal [ 'Amari', 'Mo' ]\n    at Context.<anonymous> (test/indexTest.js:76:72)\n    at processImmediate (node:internal/timers:464:21)"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "should return a new array containing the first two drivers from the passed-in array",
      "fullTitle": "index.js returnFirstTwoDrivers() should return a new array containing the first two drivers from the passed-in array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: returnFirstTwoDrivers is not defined\n    at Context.<anonymous> (test/indexTest.js:10:7)\n    at processImmediate (node:internal/timers:464:21)",
        "message": "returnFirstTwoDrivers is not defined"
      }
    },
    {
      "title": "should return an array of the last two drivers",
      "fullTitle": "index.js returnLastTwoDrivers() should return an array of the last two drivers",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected [ 'Amari', 'Claudia' ] to deeply equal [ 'Amari', 'Mo' ]",
        "showDiff": true,
        "actual": "[\n  \"Amari\"\n  \"Claudia\"\n]",
        "expected": "[\n  \"Amari\"\n  \"Mo\"\n]",
        "stack": "AssertionError: expected [ 'Amari', 'Claudia' ] to deeply equal [ 'Amari', 'Mo' ]\n    at Context.<anonymous> (test/indexTest.js:16:75)\n    at processImmediate (node:internal/timers:464:21)"
      }
    },
    {
      "title": "has the `returnFirstTwoDrivers` function to as its first element",
      "fullTitle": "index.js selectingDrivers has the `returnFirstTwoDrivers` function to as its first element",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: returnFirstTwoDrivers is not defined\n    at Context.<anonymous> (test/indexTest.js:22:42)\n    at processImmediate (node:internal/timers:464:21)",
        "message": "returnFirstTwoDrivers is not defined"
      }
    },
    {
      "title": "allows us to invoke either function from the array",
      "fullTitle": "index.js selectingDrivers allows us to invoke either function from the array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ 'Amari', 'Claudia' ] to deeply equal [ 'Amari', 'Mo' ]",
        "showDiff": true,
        "actual": "[\n  \"Amari\"\n  \"Claudia\"\n]",
        "expected": "[\n  \"Amari\"\n  \"Mo\"\n]",
        "stack": "AssertionError: expected [ 'Amari', 'Claudia' ] to deeply equal [ 'Amari', 'Mo' ]\n    at Context.<anonymous> (test/indexTest.js:32:47)\n    at processImmediate (node:internal/timers:464:21)"
      }
    },
    {
      "title": "returns the first two drivers when passed returnFirstTwoDrivers() as the second argument",
      "fullTitle": "index.js selectDifferentDrivers(arrayOfDrivers, function) returns the first two drivers when passed returnFirstTwoDrivers() as the second argument",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: returnFirstTwoDrivers is not defined\n    at Context.<anonymous> (test/indexTest.js:72:46)\n    at processImmediate (node:internal/timers:464:21)",
        "message": "returnFirstTwoDrivers is not defined"
      }
    },
    {
      "title": "returns the last two drivers when passed returnLastTwoDrivers() as the second argument",
      "fullTitle": "index.js selectDifferentDrivers(arrayOfDrivers, function) returns the last two drivers when passed returnLastTwoDrivers() as the second argument",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ 'Antonia', 'Nuru' ] to deeply equal [ 'Amari', 'Mo' ]",
        "showDiff": true,
        "actual": "[\n  \"Antonia\"\n  \"Nuru\"\n]",
        "expected": "[\n  \"Amari\"\n  \"Mo\"\n]",
        "stack": "AssertionError: expected [ 'Antonia', 'Nuru' ] to deeply equal [ 'Amari', 'Mo' ]\n    at Context.<anonymous> (test/indexTest.js:76:72)\n    at processImmediate (node:internal/timers:464:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "has the `returnLastTwoDrivers` function to as its last element",
      "fullTitle": "index.js selectingDrivers has the `returnLastTwoDrivers` function to as its last element",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns a function",
      "fullTitle": "index.js createFareMultiplier() returns a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should multiply a given value using the created multiplier",
      "fullTitle": "index.js createFareMultiplier() should multiply a given value using the created multiplier",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a function",
      "fullTitle": "index.js fareDoubler() is a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "doubles fares",
      "fullTitle": "index.js fareDoubler() doubles fares",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a function",
      "fullTitle": "index.js fareTripler() is a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "triples fares",
      "fullTitle": "index.js fareTripler() triples fares",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}